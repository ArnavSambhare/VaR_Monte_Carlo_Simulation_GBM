import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

def simulate_GBM(timerange, steps, paths, mu, sigma, cur_price, VarPerc, show_plot=False):
  patharray = np.array([[]])
  closeprices = np.array([])
  del_t = timerange/steps
  for path in range(paths):
    progresslist = np.array([np.float(cur_price)])
    for i in range(steps):
      epsilon = np.random.normal(0, 1)
      S = progresslist[-1]
      del_S = mu*S*del_t + sigma*epsilon*S*(np.sqrt(del_t))
      new_S = S + del_S
      progresslist = np.append(progresslist, new_S)

    if patharray.shape[1] == 0:
      patharray = np.array([progresslist])
    else:
      patharray = np.concatenate((patharray, np.array([progresslist])), axis=0)

    closeprices = np.append(closeprices, progresslist[-1])

  if show_plot:
    for i in range(patharray.shape[0]):
      plt.plot(patharray[i])
    plt.show()

  VaR = cur_price - np.percentile(closeprices, 100 - VarPerc)
  return VaR
